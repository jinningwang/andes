# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

jobs:
- job: win
  pool:
    vmImage: vs2017-win2016
  timeoutInMinutes: 360
  strategy:
    matrix:
      win_python3.6:
        python.version: '3.6'
      win_python3.7:
        python.version: '3.7'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
      python -m pip install --upgrade pip
      pip install .
      pip install -r requirements-dev.txt
    displayName: 'Install dependencies'

  - script: |
      pip install pytest pytest-azurepipelines
      pytest
    displayName: 'pytest'

  - script: |
      coverage run -m pytest  # Run the tests and check for test coverage.
      coverage report -m  # Generate test coverage report.
      codecov  # Upload the report to codecov.
    displayName: 'coverage'

  - script: |
      flake8 --max-line-length=115  # Enforce code style (but relax line length limit a bit).
    displayName: 'flake8 linting'

  - script: |
      python setup.py checkdocs  # check documentation (README.rst)
      make -C docs html  # Build the documentation.
    displayName: 'make documentation'
